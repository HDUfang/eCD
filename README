Python pre-requisites
---------------------
-Brian (http://briansimulator.org/)
-Numpy (http://www.numpy.org/)
-Matplotlib (http://matplotlib.org/)


Other pre-requisites:
---------------------
- git (http://git-scm.com/)

Installation steps
------------------

1. Clone the repository

>>> git clone  http://github.com/eneftci/eCD

2. Install the python library (will be installed as neusa). This will install as root. 

>>> sudo python setup.py install

If you wish to install in a user directory, you need to add this directory in the PYTHONPATH environment variable.  Assuming you have a 64-bit machine:

>>> export PYTHONPATH=$PYTHONPATH:your_directory/lib64/python2.7/site-packages'
>>> python setup.py install --prefix=your_directory

For more information on python paths and installing modules, see https://docs.python.org/2/install

Running the scripts
-------------------

The scripts in the experiments directory generate the data necessary for the figures in the paper "Event-driven Constrastive Divergence for Spiking Neuromorphic Systems".


calibrate.py: Calibrates the parameters of the sigmoid function by fitting the parameters gamma and beta to the transfer function of the IF neuron (Fig. 2)

accuracy_pre_trained.py
accuracy_pre_trained_finite.py
train_mnist.py
convergence.py
demo_prediction_construction.py
kldivergence_parameters_short_unbounded.py

The following files run the core RBM + eCD (CD) on MNIST data:

MNIST_IF_STDP.py: Script containing the main functions for training the Integrate and Fire neuron based RBM using event-driven CD
    MNIST_IF_STDP_SEQ.py: Similar to above, but used for the demonstrate_generative_model.py
    MNIST_IF_STDP_WMON.py: Similar to above, but used for convergence.py
MNIST_SRM_STDP.py: Similar to above but using the ideal transfer curve (i.e. the Spike Response Model)
MNIST_SRM_RATE.py: Similar to above, but using standard CD and the ideal transfer curve (i.e. the Spike Response Model)

parameters_*.py: These files files that contain parameters used for the experiments scripts 


The neuron models are specified in the neusa library. See the file src/neural_sampling/experimentLib.py







